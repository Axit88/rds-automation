AWSTemplateFormatVersion: "2010-09-09"
Description: CodePipeline with Cloudformation 

Parameters:
  PipeLineName:
    Type: String
    Default: default-pipeline
  ConfigurationOwner:
    Type: String
    Default: Axit88
  Repo:
    Type: String
    Default: rds-automation
  Branch:
    Type: String
    Default: main
  OAuthToken:
    Type: String
    Default: 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
  BucketName:
    Type: String
    Default: axitsamplepipelinebucket
  DeployStackName:
    Type: String
    Default: RDS-pipeline-stack
  CodePipelineRoleName: 
    Type: String
    Default: RDS-nested-codepipeline-role
  CodePipelineRoleForDeploy:
    Type: String
    Default: RDS-nested-codepipeline-deploy-role
  BuildType: 
    Type: String
    Default: LINUX_CONTAINER
  BuildImage:
    Type: String
    Default: aws/codebuild/amazonlinux2-x86_64-standard:4.0
  BuildComputeType: 
    Type: String
    Default: BUILD_GENERAL1_SMALL
  IAMRoleForLambdaCodeBuildName:
    Type: String
    Default: RDS-nested-IAMRoleForRDSPipelineCodeBuild
  ProjectName:
    Type: String
    Description: "What is the name of the project?"
    Default: rdsAutomationBuildProject
  DevAccountId:
    Type: String
    Default: "803928384365"
  Username: 
    Type: String
    Default: admin
  Password: 
    Type: String
    Default: admin123
  JDBCUrl: 
    Type: String
    Default: jdbc:mysql://database-2.clgbfp6capnz.ap-northeast-1.rds.amazonaws.com:3306/rdsDb2
  

Resources:

  IAMRoleForCodePipeline:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      RoleName: !Ref CodePipelineRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: lambdaCodepipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Action:
              - iam:PassRole
              Resource: "*"
              Effect: Allow
              Condition:
                StringEqualsIfExists:
                  iam:PassedToService:
                  - cloudformation.amazonaws.com
                  - elasticbeanstalk.amazonaws.com
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
            - Action:
              - codecommit:CancelUploadArchive
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetRepository
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
              Resource: "*"
              Effect: Allow
            - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplication
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
              Resource: "*"
              Effect: Allow
            - Action:
              - codestar-connections:UseConnection
              Resource: "*"
              Effect: Allow
            - Action:
              - elasticbeanstalk:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
              Resource: "*"
              Effect: Allow
            - Action:
              - lambda:InvokeFunction
              - lambda:ListFunctions
              Resource: "*"
              Effect: Allow
            - Action:
              - opsworks:CreateDeployment
              - opsworks:DescribeApps
              - opsworks:DescribeCommands
              - opsworks:DescribeDeployments
              - opsworks:DescribeInstances
              - opsworks:DescribeStacks
              - opsworks:UpdateApp
              - opsworks:UpdateStack
              Resource: "*"
              Effect: Allow
            - Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
              Resource: "*"
              Effect: Allow
            - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:BatchGetBuildBatches
              - codebuild:StartBuildBatch
              Resource: "*"
              Effect: Allow
            - Effect: Allow
              Action:
              - devicefarm:ListProjects
              - devicefarm:ListDevicePools
              - devicefarm:GetRun
              - devicefarm:GetUpload
              - devicefarm:CreateUpload
              - devicefarm:ScheduleRun
              Resource: "*"
            - Effect: Allow
              Action:
              - servicecatalog:ListProvisioningArtifacts
              - servicecatalog:CreateProvisioningArtifact
              - servicecatalog:DescribeProvisioningArtifact
              - servicecatalog:DeleteProvisioningArtifact
              - servicecatalog:UpdateProduct
              Resource: "*"
            - Effect: Allow
              Action:
              - cloudformation:ValidateTemplate
              Resource: "*"
            - Effect: Allow
              Action:
              - ecr:DescribeImages
              Resource: "*"
            - Effect: Allow
              Action:
              - states:DescribeExecution
              - states:DescribeStateMachine
              - states:StartExecution
              Resource: "*"
            - Effect: Allow
              Action:
              - appconfig:StartDeployment
              - appconfig:StopDeployment
              - appconfig:GetDeployment
              Resource: "*" 

  RDSCodePipeLine:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref BucketName
      Name: !Ref PipeLineName
      RoleArn: !GetAtt IAMRoleForCodePipeline.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source 
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              Configuration:
                Owner: !Ref ConfigurationOwner
                Repo: !Ref Repo
                Branch: !Ref Branch
                OAuthToken: !Ref OAuthToken
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1

        # - Name: Deploy
        #   Actions:
        #     - Name: Deploy
        #       ActionTypeId:
        #         Category: Deploy
        #         Owner: AWS
        #         Version: "1"
        #         Provider: CloudFormation
        #       Configuration:
        #         ActionMode: CREATE_UPDATE
        #         StackName: !Ref DeployStackName
        #         Capabilities: CAPABILITY_NAMED_IAM
        #         TemplatePath: BuildOutput::rootStack.yaml
        #         RoleArn: !GetAtt IAMRoleForDeployCodepipeline.Arn
        #       InputArtifacts:
        #         - Name: BuildOutput
        #       RunOrder: 2
  
  # BuildProject:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name: RDSPipelineBuildProject
  #     Source:
  #       Type: GITHUB
  #       Location: !Sub 'https://github.com/${ConfigurationOwner}/${Repo}.git'
  #     Artifacts:
  #       Type: S3 
  #       Name: RDSBuildProjectArtifacts
  #       Location: !Ref BucketName
  #     # Triggers:
  #     #   Webhook: true
  #     Environment:
  #       Type: !Ref BuildType
  #       Image: !Ref BuildImage
  #       ComputeType: !Ref BuildComputeType
  #       ImagePullCredentialsType: CODEBUILD
  #     ServiceRole: !GetAtt IAMRoleForRDSPipelineCodeBuild.Arn
  #     TimeoutInMinutes: 60
  #     QueuedTimeoutInMinutes: 480
  #     LogsConfig:
  #       CloudWatchLogs:
  #         Status: ENABLED
  
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ "-", [ !Ref 'ProjectName' , "flyway-codebuild", !Ref 'AWS::Region', "project" ] ]        
      ServiceRole: !GetAtt IAMRoleForRDSPipelineCodeBuild.Arn
      Artifacts:
        Type: no_artifacts
      LogsConfig:
        CloudWatchLogs:
          Status: "ENABLED"
          GroupName: !Ref ProjectName
          StreamName: "flyway"
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        PrivilegedMode: "true"
        EnvironmentVariables:
          - Name: username 
            Value: !Ref Username
            Type: PLAINTEXT
          - Name: password 
            Value: !Ref Password
            Type: PLAINTEXT
          - Name: url
            Value: !Ref JDBCUrl
            Type: PLAINTEXT
      Cache:
        Type: LOCAL
        Modes: 
          - LOCAL_DOCKER_LAYER_CACHE            
      Source:
        Type: GITHUB
        Location: !Sub 'https://github.com/${ConfigurationOwner}/${Repo}.git'        
      TimeoutInMinutes: 30

  IAMRoleForRDSPipelineCodeBuild:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      RoleName: !Ref IAMRoleForLambdaCodeBuildName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
        - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
  
  RDSPipeLineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref OAuthToken
      Filters:
        - JsonPath: $.ref
          MatchEquals: !Sub refs/heads/main
      TargetAction: Source 
      TargetPipeline: !Ref RDSCodePipeLine
      TargetPipelineVersion: !GetAtt RDSCodePipeLine.Version
      RegisterWithThirdParty: 'true' 

Outputs:
  RDSCodePipeLine:
    Description: RDSCodePipeLine Detail
    Value: !Ref RDSCodePipeLine
    Export:
      Name: RDSCodePipeLine

# aws cloudformation create-stack --stack-name pipelineStack --template-body file://pipeline.yaml --capabilities CAPABILITY_NAMED_IAM --disable-rollback

# aws cloudformation update-stack --stack-name pipelineStack --template-body file://pipeline.yaml --capabilities CAPABILITY_NAMED_IAM --disable-rollback 

# Host github.com-axitdhola
#     HostName github.com
#     User git
#     IdentityFile ~/.ssh/axitdhola

# Host github.com-Axit88
#     HostName github.com
#     User git
#     IdentityFile ~/.ssh/Axit88

# git config user.email "axit.dhola@mindtickle.com"
# git config user.name "Axit88"